{
  "name": "single-spa-angular",
  "version": "0.0.0",
  "description": "Helpers for building single-spa applications which use Angular 2+",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/single-spa/single-spa-angular.git"
  },
  "keywords": [
    "single-spa",
    "angular"
  ],
  "author": "Joel Denning",
  "maintainers": [
    "Joel Denning",
    "Artur Androsovych"
  ],
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/single-spa/single-spa-angular/issues"
  },
  "homepage": "https://github.com/single-spa/single-spa-angular#readme",
  "private": true,
  "scripts": {
    "nx": "nx",
    "postinstall": "node ./decorate-angular-cli.js && ngcc --properties es2015 browser module main",
    "prepublishOnly": "yarn build && yarn test",
    "clean": "rimraf lib",
    "build": "yarn clean && yarn build:single-spa-angular && concurrently yarn:build:schematics yarn:build:webpack",
    "test": "yarn clean && jest",
    "lint": "eslint apps libs --ext ts",
    "// - SINGLE-SPA-ANGULAR": "Scripts for building single-spa-angular",
    "build:single-spa-angular": "nx build single-spa-angular && cpx README.md lib",
    "// - WEBPACK": "Scripts for building Webpack config transformer",
    "prebuild:webpack": "rimraf lib/lib",
    "build:webpack": "tsc -p tsconfig.webpack.json",
    "// - SCHEMATICS": "Scripts for building schematics and copying its files",
    "prebuild:schematics": "rimraf lib/schematics",
    "build:schematics": "tsc -p tsconfig.schematics.json && concurrently yarn:copy:schematics:*",
    "copy:schematics:json": "cpx schematics/schematics.json lib/schematics",
    "copy:schematics:schema": "cpx \"schematics/ng-add/schema*\" lib/schematics/ng-add",
    "copy:schematics:files": "cpx \"schematics/ng-add/_files/**/**\" lib/schematics/ng-add/_files",
    "format": "prettier './**/*' --write",
    "// - INTEGRATION INSTALLS": "Install packages for integration apps",
    "serve:app:common": "nx serve --disable-host-check --live-reload false",
    "serve:app:shop": "yarn serve:app:common shop --port 4200",
    "serve:app:chat": "yarn serve:app:common chat --port 9000",
    "serve:app:navbar": "yarn serve:app:common navbar --port 4300",
    "serve:app:noop-zone": "yarn serve:app:common noop-zone --port 8000",
    "serve:app:elements": "yarn serve:app:common elements --port 4000",
    "serve:app:parcel": "yarn serve:app:common parcel --port 4400",
    "serve:app:portal": "serve apps/portal -s -l 8080",
    "serve:all": "concurrently yarn:serve:app:*",
    "// - INTEGRATION BUILDS": "Build apps that are required for E2E testing #requires yarn install:integration",
    "build:app:shop": "ng build shop --prod",
    "build:app:chat": "ng build chat --prod",
    "build:app:navbar": "ng build navbar --prod",
    "build:app:noop-zone": "ng build noop-zone --prod",
    "build:app:elements": "ng build elements --prod",
    "build:app:parcel": "ng build parcel --prod",
    "build:all": "nx run-many --target build --projects=shop,chat,navbar,noop-zone,elements,parcel --parallel --prod",
    "// - APPS": "Serve apps that are required for E2E testing #requires yarn build:integration",
    "start:all": "concurrently -n w: yarn:start:app:*",
    "start:app:shop": "serve dist/apps/shop -s -l 4200 --cors",
    "start:app:chat": "serve dist/apps/chat -s -l 9000 --cors",
    "start:app:navbar": "serve dist/apps/navbar -s -l 4300 --cors",
    "start:app:noop-zone": "serve dist/apps/noop-zone -s -l 8000 --cors",
    "start:app:elements": "serve dist/apps/elements -s -l 4000 --cors",
    "start:app:parcel": "serve dist/apps/parcel -s -l 4400 --cors",
    "start:app:portal": "yarn serve:app:portal",
    "// - E2E": "E2E testing",
    "cy:open": "cypress open",
    "cy:run": "cypress run",
    "cy:run:chrome": "yarn cy:run --browser chrome",
    "cy:run:chromium": "yarn cy:run --browser chromium",
    "// - CI": "CI testing #requires yarn start:all",
    "test:ci": "jest --run-in-band --silent",
    "test:ci:integration": "yarn start-test start:all 8080 cy:run"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "12.0.0",
    "@angular-devkit/build-angular": "12.0.0",
    "@angular-devkit/core": "^11.2.2",
    "@angular-devkit/schematics": "^11.2.2",
    "@angular/animations": "12.0.0",
    "@angular/cli": "12.0.0",
    "@angular/common": "12.0.0",
    "@angular/compiler": "12.0.0",
    "@angular/compiler-cli": "12.0.0",
    "@angular/core": "12.0.0",
    "@angular/elements": "12.0.0",
    "@angular/forms": "12.0.0",
    "@angular/language-service": "12.0.0",
    "@angular/platform-browser": "12.0.0",
    "@angular/platform-browser-dynamic": "12.0.0",
    "@angular/router": "12.0.0",
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-conventional": "^8.3.4",
    "@nrwl/angular": "12.3.1",
    "@nrwl/cli": "12.3.1",
    "@nrwl/nx-cloud": "12.1.1",
    "@nrwl/workspace": "12.3.1",
    "@types/jest": "^26.0.10",
    "@types/karma": "^6.1.0",
    "@types/node": "14.14.33",
    "@types/single-spa-react": "^2.12.0",
    "@typescript-eslint/eslint-plugin": "4.19.0",
    "@typescript-eslint/parser": "4.19.0",
    "concurrently": "^5.1.0",
    "cpx": "^1.5.0",
    "cypress": "^6.6.0",
    "eslint": "7.22.0",
    "eslint-plugin-prefer-arrow": "^1.2.0",
    "husky": "^4.2.5",
    "jest": "^26.6.3",
    "json5": "^2.1.3",
    "lint-staged": "^10.1.3",
    "ng-packagr": "12.0.0",
    "prettier": "^2.2.1",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "rimraf": "^2.6.2",
    "rxjs": "~6.5.5",
    "serve": "^11.3.0",
    "single-spa-react": "^3.1.0",
    "start-server-and-test": "^1.12.0",
    "ts-jest": "26.5.5",
    "tslib": "^2.0.0",
    "typescript": "4.2.4",
    "zone.js": "~0.11.4"
  },
  "dependencies": {
    "single-spa": ">= 5.4"
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "arrowParens": "avoid",
    "endOfLine": "lf",
    "printWidth": 100,
    "trailingComma": "all",
    "bracketSpacing": true
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{ts,html,scss,md,yml}": [
      "prettier --write"
    ]
  }
}
